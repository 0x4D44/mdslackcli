name: Windows Build & Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build-windows:
    name: Build (Windows)
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Cache cargo and target
        uses: Swatinem/rust-cache@v2

      - name: Format check
        run: cargo fmt --all --check

      - name: Clippy (deny warnings)
        run: cargo clippy -- -D warnings

      - name: Build release
        run: cargo build --release

      - name: Package artifact
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path dist | Out-Null
          Copy-Item -Path target/release/mdslackcli.exe -Destination dist/
          Copy-Item -Path target/release/mdslackcli.exe -Destination ./mdslackcli.exe -Force
          $zipPath = "mdslackcli-windows-x86_64.zip"
          if (Test-Path $zipPath) { Remove-Item $zipPath -Force }
          Compress-Archive -Path dist/* -DestinationPath $zipPath

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: mdslackcli-windows
          path: |
            mdslackcli.exe
            mdslackcli-windows-x86_64.zip

  release:
    name: Release
    needs: build-windows
    runs-on: windows-latest
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: mdslackcli-windows
          path: .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: mdslackcli.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
